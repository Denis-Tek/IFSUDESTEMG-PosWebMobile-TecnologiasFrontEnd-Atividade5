{"version":3,"sources":["Temas.js","EstiloGlobal.js","App.js","reportWebVitals.js","index.js"],"names":["temaClaro","bodyBackgroundColor","h1Color","toggleColor","inputBackgroundColor","inputColor","temaEscuro","EstiloGlobal","createGlobalStyle","theme","App","props","mudarTema","state","tema","setState","this","className","id","onClick","src","alt","type","required","placeholder","Button","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRACaA,EAAY,CACvBC,oBAAqB,QACrBC,QAAS,QACTC,YAAa,QACbC,qBAAsB,QACtBC,WAAY,WAGDC,EAAa,CACxBL,oBAAqB,UACrBC,QAAS,QACTC,YAAa,QACbC,qBAAsB,UACtBC,WAAY,S,4hBCZP,IAAME,EAAeC,YAAH,KAER,qBAAEC,MAAiBR,uBAKvB,qBAAEQ,MAAiBP,WAKnB,qBAAEO,MAAiBN,eAKnB,qBAAEM,MAAiBJ,cACR,qBAAEI,MAAiBL,wBAK9B,qBAAEK,MAAiBJ,cACR,qBAAEI,MAAiBL,wBCoB5BM,E,kDApCb,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IAINC,UAAY,WACc,UAApB,EAAKC,MAAMC,KACb,EAAKC,SAAS,CAACD,KAAM,WAErB,EAAKC,SAAS,CAACD,KAAM,WAPvB,EAAKD,MAAQ,CAACC,KAAM,SAFH,E,qDAcjB,OACI,eAAC,IAAD,CAAeL,MAA2B,UAApBO,KAAKH,MAAMC,KAAmBd,EAAYM,EAAhE,UACE,cAACC,EAAD,IAEA,uBAAMU,UAAU,cAAhB,UACE,sBAAKC,GAAG,SAASC,QAASH,KAAKJ,UAA/B,oBAAiE,UAApBI,KAAKH,MAAMC,KAAmB,eAAiB,mBAE5F,uBAAMG,UAAU,cAAhB,UACE,qBAAKA,UAAU,OAAOG,IAAI,yGAAyGC,IAAI,kBACvI,oBAAIJ,UAAU,oBAAd,oDACA,uBAAOK,KAAK,QAAQC,UAAQ,EAACC,YAAY,wBAAqBP,UAAU,iBACxE,sBACA,cAACQ,EAAA,EAAD,CAAQH,KAAK,SAAb,oC,GA5BII,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.808b0371.chunk.js","sourcesContent":["\r\nexport const temaClaro = {\r\n  bodyBackgroundColor: 'white',\r\n  h1Color: 'black',\r\n  toggleColor: 'black',\r\n  inputBackgroundColor: ' #fff', \r\n  inputColor: '#495057',\r\n}\r\n\r\nexport const temaEscuro = {\r\n  bodyBackgroundColor: '#343a40',\r\n  h1Color: 'white',\r\n  toggleColor: 'white',\r\n  inputBackgroundColor: '#495057',\r\n  inputColor: ' #fff',\r\n}","import {createGlobalStyle} from \"styled-components\"\r\n\r\nexport const EstiloGlobal = createGlobalStyle`\r\n  body {\r\n\t  background: ${({theme}) => theme.bodyBackgroundColor};\r\n\t  transition: all 0.30s linear;\r\n  }\r\n\r\n  h1 {\r\n    color: ${({theme}) => theme.h1Color};\r\n    transition: all 0.30s linear;  \r\n  }\r\n\r\n  #toggle {\r\n    color: ${({theme}) => theme.toggleColor};\r\n    transition: all 0.30s linear;  \r\n  }\r\n\r\n  .form-control {\r\n    color: ${({theme}) => theme.inputColor};\r\n    background-color: ${({theme}) => theme.inputBackgroundColor};\r\n    transition: all 0.30s linear;\r\n  }\r\n\r\n  .form-control:focus {\r\n    color: ${({theme}) => theme.inputColor};\r\n    background-color: ${({theme}) => theme.inputBackgroundColor};\r\n  }\r\n \r\n  button {\r\n\t  &:hover {\r\n\t    opacity: 0.6;\r\n  \t}\r\n  }\r\n`;\r\n","import './App.css';\n\nimport React, {Component} from 'react';\nimport {Button} from 'reactstrap';\nimport {ThemeProvider} from 'styled-components';\nimport {temaClaro, temaEscuro} from './Temas';\nimport {EstiloGlobal} from './EstiloGlobal';\n\nclass App extends Component {\n\n  constructor(props) {\n\t\tsuper(props);\n    this.state = {tema: 'claro'}\n\t}   \n\n  mudarTema = () => {\n    if (this.state.tema === 'claro') {\n      this.setState({tema: 'escuro'})\n    } else {\n      this.setState({tema: 'claro'})\n    }\n  } \n\n  render() {\n    return (\n        <ThemeProvider theme={this.state.tema === 'claro' ? temaClaro : temaEscuro}>\n          <EstiloGlobal />\n\n          <main className='form-signin'>\n            <div id='toggle' onClick={this.mudarTema}>☀ {this.state.tema === 'claro' ? 'apagar a luz' : 'acender a luz'}</div>\n\n            <form className='text-center'>\n              <img className='mb-4' src='https://avatars3.githubusercontent.com/u/26981426?s=400&u=330402cc4efe681b4040431f933a5c387d6669aa&v=4' alt=\"Foto de Denis\"/>         \n              <h1 className='h3 mb-3 fw-normal'>Se inscreva em meu boletim informativo</h1>\n              <input type='email' required placeholder=\"endereço de e-mail\" className='form-control'></input>\n              <p></p>\n              <Button type='submit'>Inscrever</Button>\n            </form>\n          </main>\n\n        </ThemeProvider>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}